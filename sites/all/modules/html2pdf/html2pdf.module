<?php

function html2pdf_menu(){
    $item['html2pdf'] = array(
        'type' => MENU_CALLBACK,
        'access arguments' => array('access content'),
        'page callback' => '_html2pdf_menu_callback',
        'page arguments' => array(1,2),
//        'delivery callback' => 'ajax_deliver',
    );
    return $item;
}
function html2pdf_preprocess_node($node){
        $arg =arg();
        if($node["type"] === "birthday"){
            $js = drupal_get_path("module", "html2pdf").'/js';
            drupal_add_js($js.'/html2pdf.js');
        }
}
function exec_timeout($cmd, $timeout) {
// adapted from http://blog.dubbelboer.com/2012/08/24/execute-with-timeout.html

// File descriptors passed to the process.
  $descriptors = array(
    0 => array('pipe', 'r'),  // stdin
    1 => array('pipe', 'w'),  // stdout
    2 => array('pipe', 'w')   // stderr
  );

  // Start the process.
  $process = proc_open('exec ' . $cmd, $descriptors, $pipes);

  if (!is_resource($process)) {
    throw new \Exception('Could not execute process');
  }

  // Set the stdout stream to BLOCKING
  stream_set_blocking($pipes[1], 1);

  // Turn the timeout into microseconds.
  $timeout = $timeout * 1000000;

  // Output buffer.
  $buffer = '';

  // While we have time to wait.
  while ($timeout > 0) {
    $start = microtime(true);

    // Wait until we have output or the timer expired.
    $read  = array($pipes[1]);
    $other = array();
    stream_select($read, $other, $other, 0, $timeout);

    // Get the status of the process.
    // Do this before we read from the stream,
    // this way we can't lose the last bit of output if the process dies between these functions.
    $status = proc_get_status($process);

    // Read the contents from the buffer.
    // This function will always return immediately as the stream is none-blocking.
    $buffer .= stream_get_contents($pipes[1]);

    if (!$status['running']) {
      // Break from this loop if the process exited before the timeout.
      break;
    }

    // Subtract the number of microseconds that we waited.
    $timeout -= (microtime(true) - $start) * 1000000;
//    echo $timeout."<br/>\n";
  }

  // Check if there were any errors.
  $errors = stream_get_contents($pipes[2]);

  if (!empty($errors)) {
    throw new \Exception($errors);
  }

  // Kill the process in case the timeout expired and it's still running.
  // If the process already exited this won't do anything.
  proc_terminate($process, 9);

  // Close all streams.
  fclose($pipes[0]);
  fclose($pipes[1]);
  fclose($pipes[2]);

  proc_close($process);

  return $buffer;
}

function _html2pdf_menu_callback($arg1, $phantomjs_args = 0){
    $cmd = "phantomjs ";
// DEBUG
//    if($phantomjs_args  !== 0){
//        $cmd .= $phantomjs_args ;
//    }        
    $cmd .= " script.js ";
    if($arg1 === "data" && count($_POST["json"])){
        $container = (object)$_POST["json"];
        
        $post = json_encode($container ,  JSON_FORCE_OBJECT);
        $cmd .= "'".$post."'";
        chdir( drupal_get_path("module", "html2pdf").'/phantom/' );
        exit(exec_timeout($cmd, 1) );
    }die();
}
// ##     process output from phantom 
// 
//        $output = exec_timeout($cmd, 1);//<=  $buffer .= stream_get_contents($pipes[1]);
//        $json_decode = json_decode($output);
//        $json_decode = json_decode(exec_timeout($cmd, 1));
//        if($json_decode){//        
//        if(json_decode(exec_timeout($cmd, 1))){//        echo $json_decode->media;die();
//           $file = $_SERVER["DOCUMENT_ROOT"].'/'.$html2pdf.'/'.$json_decode->fileName;
//           $json_decode->url = "http://".$_SERVER["SERVER_NAME"].'/'.$html2pdf.'/'.$json_decode->fileName;
//           $json_decode->fileName = $html2pdf.'/'.$json_decode->fileName;
//           $output = json_encode($json_decode);
//           exit($output );
//           
//  ##  HTML output
//  
//echo    '<html><head></head><body><img src="'.$html2pdf.'/out.png?'.time().'"/>';
//echo    '<script>    '.
//        '   var status = '.$output.';       '.
//        '   console.log(status);            '.
//        '   window.location = "'.$html2pdf.'/out.pdf";          '.
//        '//  document.title = status.success;'.
//        '</script>';
//  echo    '</body></html>';    
//  
//  
//  ##  FILE OUTPUT
//        
//            header('Content-Description: File Transfer');
//            header('Content-Type: application/octet-stream');
//            header('Content-Disposition: attachment; filename='.basename($file));
//            header('Content-Transfer-Encoding: binary');
//            header('Expires: 0');
//            header('Cache-Control: must-revalidate');
//            header('Pragma: public');
//            header('Content-Length: ' . filesize($file));
//            ob_clean();
//            flush();
//            readfile($file);
//            unlink($file);
//            exit();
//        }
